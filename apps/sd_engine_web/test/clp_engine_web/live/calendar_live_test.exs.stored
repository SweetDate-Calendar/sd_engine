defmodule SDWeb.CalendarLiveTest do
  use SDWeb.ConnCase

  import Phoenix.LiveViewTest
  import SD.CalendarsFixtures

  @create_attrs %{name: "some name", color_theme: "some color_theme", visibility: :private}
  @update_attrs %{
    name: "some updated name",
    color_theme: "some updated color_theme",
    visibility: :public
  }
  @invalid_attrs %{name: nil, color_theme: nil, visibility: nil}
  defp create_calendar(_) do
    calendar =
      calendar_fixture()

    %{calendar: calendar}
  end

  defp create_attrs() do
    tier = SD.TiersFixtures.tier_fixture()

    Map.put(@create_attrs, tier_id: tier.id)
  end

  describe "Index" do
    setup [:create_calendar]

    test "lists all calendars", %{conn: conn, calendar: calendar} do
      {:ok, _index_live, html} = live(conn, ~p"/tiers/#{tier_id}/calendars")

      assert html =~ "Listing Calendars"
      assert html =~ calendar.name
    end

    test "saves new calendar", %{conn: conn} do
      {:ok, index_live, _html} = live(conn, ~p"/tiers/#{tier_id}/calendars")

      assert {:ok, form_live, _} =
               index_live
               |> element("a", "New Calendar")
               |> render_click()
               |> follow_redirect(conn, ~p"/tiers/#{tier_id}/calendars/new")

      assert render(form_live) =~ "New Calendar"

      assert form_live
             |> form("#calendar-form", calendar: @invalid_attrs)
             |> render_change() =~ "can&#39;t be blank"

      assert {:ok, index_live, _html} =
               form_live
               |> form("#calendar-form", calendar: create_attrs())
               |> render_submit()
               |> follow_redirect(conn, ~p"/tiers/#{tier_id}/calendars")

      html = render(index_live)
      assert html =~ "Calendar created successfully"
      assert html =~ "some name"
    end

    test "updates calendar in listing", %{conn: conn, calendar: calendar} do
      {:ok, index_live, _html} = live(conn, ~p"/tiers/#{tier_id}/calendars")

      assert {:ok, form_live, _html} =
               index_live
               |> element("#calendars-#{calendar.id} a", "Edit")
               |> render_click()
               |> follow_redirect(conn, ~p"/tiers/#{tier_id}/calendars/#{calendar}/edit")

      assert render(form_live) =~ "Edit Calendar"

      assert form_live
             |> form("#calendar-form", calendar: @invalid_attrs)
             |> render_change() =~ "can&#39;t be blank"

      assert {:ok, index_live, _html} =
               form_live
               |> form("#calendar-form", calendar: @update_attrs)
               |> render_submit()
               |> follow_redirect(conn, ~p"/tiers/#{tier_id}/calendars")

      html = render(index_live)
      assert html =~ "Calendar updated successfully"
      assert html =~ "some updated name"
    end

    test "deletes calendar in listing", %{conn: conn, calendar: calendar} do
      {:ok, index_live, _html} = live(conn, ~p"/tiers/#{tier_id}/calendars")

      assert index_live |> element("#calendars-#{calendar.id} a", "Delete") |> render_click()
      refute has_element?(index_live, "#calendars-#{calendar.id}")
    end
  end

  describe "Show" do
    setup [:create_calendar]

    test "displays calendar", %{conn: conn, calendar: calendar} do
      {:ok, _show_live, html} = live(conn, ~p"/tiers/#{tier_id}/calendars/#{calendar}")

      assert html =~ "Show Calendar"
      assert html =~ calendar.name
    end

    test "updates calendar and returns to show", %{conn: conn, calendar: calendar} do
      {:ok, show_live, _html} = live(conn, ~p"/tiers/#{tier_id}/calendars/#{calendar}")

      assert {:ok, form_live, _} =
               show_live
               |> element("a", "Edit")
               |> render_click()
               |> follow_redirect(
                 conn,
                 ~p"/tiers/#{tier_id}/calendars/#{calendar}/edit?return_to=show"
               )

      assert render(form_live) =~ "Edit Calendar"

      assert form_live
             |> form("#calendar-form", calendar: @invalid_attrs)
             |> render_change() =~ "can&#39;t be blank"

      assert {:ok, show_live, _html} =
               form_live
               |> form("#calendar-form", calendar: @update_attrs)
               |> render_submit()
               |> follow_redirect(conn, ~p"/tiers/#{tier_id}/calendars/#{calendar}")

      html = render(show_live)
      assert html =~ "Calendar updated successfully"
      assert html =~ "some updated name"
    end
  end
end
